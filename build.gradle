apply plugin: 'idea'
apply plugin: 'war' // 引入war插件, 它默认包含java插件
apply plugin: 'com.bmuschko.tomcat' //tomcat: 插件

group 'com.tpl.ssm.cfg'
version '1.0-SNAPSHOT'

// https://blog.csdn.net/wishchin/article/details/107402002
def nativeBuildSystem = 'none'

// tomcat: 以下配置会在第一次启动时下载插件二进制文件
buildscript {
    repositories {
        // jcenter() https://blog.csdn.net/mars314/article/details/81910789
        jcenter() { url 'http://jcenter.bintray.com/' }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
    }
}

//仓库的配置
allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter() { url 'http://jcenter.bintray.com/' }
        mavenCentral()
    }

    // 配置外部属性
    ext {
        spring_version = "5.1.18.RELEASE"
        jackson_version = "2.9.7"
    }

    // https://blog.csdn.net/weixin_34238642/article/details/94028448
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

// 依赖配置
dependencies {
    //springmvc + Spring Configuration
    implementation "org.springframework:spring-web:$spring_version"
    implementation "org.springframework:spring-webmvc:$spring_version"
    implementation "org.springframework:spring-aop:$spring_version"
    implementation "org.springframework:spring-aspects:$spring_version"
    implementation "org.springframework:spring-beans:$spring_version"
    implementation "org.springframework:spring-context:$spring_version"
    implementation "org.springframework:spring-context-support:$spring_version"
    implementation "org.springframework:spring-core:$spring_version"
    implementation "org.springframework:spring-expression:$spring_version"
    implementation "org.springframework:spring-jdbc:$spring_version"
    implementation "org.springframework:spring-messaging:$spring_version"
    implementation "org.springframework:spring-orm:$spring_version"
    implementation "org.springframework:spring-tx:$spring_version"
    implementation "org.springframework:spring-test:$spring_version"

    //MyBatis-plus （mybatis的增强版）
    implementation "com.baomidou:mybatis-plus:2.1.4"
    implementation group: 'org.apache.velocity', name: 'velocity', version: '1.7'

    //MySQL数据库驱动
    implementation "mysql:mysql-connector-java:8.0.16"

    //阿里巴巴 数据库连接池
    implementation "com.alibaba:druid:1.0.12"

    //json解析
    implementation "com.google.code.gson:gson:2.7"

    //fastjson springmvc 用他来为@ ResponseBody 注解的方法 ， 返回 json
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson_version
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jackson_version
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jackson_version

    //日志文件管理包log4j
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.24'
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.24'

    //api文档 自动生成
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'

    //servlet依赖
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    implementation group: 'javax.servlet', name: 'jsp-api', version: '2.0'

    //jstl标签库
    implementation "taglibs:standard:1.1.2"
    implementation "javax.servlet:jstl:1.2"

    //公共资源包
    implementation "commons-logging:commons-logging:1.2"
    implementation "commons-lang:commons-lang:2.6"
    implementation "org.apache.commons:commons-collections4:4.0"
    implementation "commons-beanutils:commons-beanutils:1.8.3"
    implementation "commons-dbcp:commons-dbcp:1.4"
    implementation "commons-pool:commons-pool:1.6"

    //文件上传
    implementation "commons-fileupload:commons-fileupload:1.3.1"
    implementation "commons-io:commons-io:2.4"

    //AspectJ（切点表达式）
    implementation "org.aspectj:aspectjrt:1.7.4"
    implementation "org.aspectj:aspectjweaver:1.7.4"

    // https://blog.csdn.net/u014212540/article/details/119457532
    implementation 'com.google.code.findbugs:annotations:3.0.1u2'
    implementation 'junit:junit:4.13.1'

    def tomcatVersion = '8.5.42'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

// tomcat: 一些协议设置
tomcat {
    httpProtocol = "org.apache.coyote.http11.Http11Nio2Protocol"
    ajpProtocol = "org.apache.coyote.ajp.AjpNio2Protocol"
    httpPort = 8090
    httpsPort = 8091
}

// UTF-8
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// https://www.cnblogs.com/Im-Victor/p/10857658.html
// https://blog.csdn.net/swiftxx/article/details/119806869